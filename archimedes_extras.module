<?php

/**
 * @file
 *  Provide additional reporting for Archimedes.
 */

/**
 * Implements hook_archimedes_alter().
 *
 * Adds additional checks for Archimedes.
 */
function archimedes_extras_archimedes_alter(&$owl) {
  module_load_include('inc', 'archimedes_extras');
  // Unstaged / uncommitted modifications in Git repos.
  if (variable_get('archimedes_extras_report_git', true)) {
    if ($values = archimedes_extras_git_status()) {
      $owl->createField('field_git_status', $values);
    }
    else {
      $owl->createField('field_git_status', '');
    }
  }

  if (variable_get('archimedes_extras_report_civicrm', true)) {
    if (module_exists('civicrm')) {
      if ($info = archimedes_extras_civicrm_gitinfo()) {
        $owl->createField('field_civicrm_git_commit', $info['commit_hash']);
        $owl->createField('field_civicrm_git_branch', $info['branch']);
      }

      if ($values = archimedes_extras_civicrm_lastcron()) {
        $owl->createField('field_civicrm_lastcron', $values);
      }
      else {
        $owl->createField('field_civicrm_lastcron', '');
      }
    }
  }
}

/**
 * Implements hook_archimedes_rows_alter().
 */
function archimedes_extras_archimedes_rows_alter(&$rows, &$owl) {
  module_load_include('inc', 'archimedes_extras');
  if (module_exists('civicrm')) {
    $civicrm_git_commit = (string) $owl->getField('field_civicrm_git_commit');
    if (!empty($civicrm_git_commit)) {
      $rows[] = array(t('CiviCRM Git Commit'), $civicrm_git_commit);
    }
    $civicrm_git_branch = (string) $owl->getField('field_civicrm_git_branch');
    if (!empty($civicrm_git_branch)) {
      $rows[] = array(t('CiviCRM Git Branch'), $civicrm_git_branch);
    }
    $git_status = (string) $owl->getField('field_git_status');

    $civicrm_last_cron = (string) $owl->getField('field_civicrm_last_cron');
    if (!empty($civicrm_last_cron)) {
      $rows[] = array(t('CiviCRM Last Cron'), $civicrm_last_cron);
    }
  }
  if (!empty($git_status)) {
    $rows[] = array(array('data' => t('Git Status'), 'style' => 'vertical-align: top;'), $git_status);
  }
}
